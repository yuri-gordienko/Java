<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
        <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/test</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">java-java</property>
        <property name="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</property>
        <property name="hibernate.hbm2ddl.auto">update</property>
        <property name="hibernate.current_session_context_class">org.hibernate.context.internal.ThreadLocalSessionContext</property>
        <property name="hibernate.show_sql">true</property>
        <property name="hibernate.enable_lazy_load_no_trans">true</property>

        <mapping class="yugo.entity.Employee"/>
        <mapping class="yugo.entity.Department"/>
        <mapping class="yugo.entity.Balance"/>
        <mapping class="yugo.entity.Branch"/>
    </session-factory>
</hibernate-configuration>

<!--hibernate.hbm2ddl.auto: create - new table; create-drop - drop old table and create new; update - update existing table-->
<!--hibernate.current_session_context_class: new session its new threat (in our case), might be other settings-->
<!--hibernate.show_sql: we can see sql queries on hql in console-->
<!--hibernate.enable_lazy_load_no_trans: якщо у нас звʼязок ManyToMany, то якщо Департаменти тянуть Працівниців, то в класі
працівників також встановлен звʼязок ManyToMany і ті в свою чергу тягнуть Департаменти, потім Деп тягне Працівників і так
до безмежності, тому ця стратегія обрублює не потрібну підтяжку (повертає null)-->
<!--yugo.entity.Employee: explain what are classes to mapping (what classes will be created as tables)-->

